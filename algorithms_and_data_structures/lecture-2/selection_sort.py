# Сортировка выбором
# Сложность алгоритма = O(n^2)


def slection_sort(data):
    # В цикле переменная i хранит индекс ячейки,
    # в которую записывается минимальный элемент.
    # Сначала это будет первая ячейка.
    i = 0
    # N - 1, так как последний элемент
    # обменивать уже не надо.
    while i < len(data) - 1:
        # ПОИСК МИНИМУМА
        # Сначала надо найти минимальное значение
        # на срезе от i до конца списка.
        # Переменная m будет хранить индекс ячейки
        # с минимальным значением.
        # Сначала предполагаем, что
        # в ячейке i содержится минимальный элемент.
        m = i
        # Поиск начинаем с ячейки следующей за i.
        j = i + 1
        # Пока не дойдем до конца списка,
        while j < len(data):
            # будем сравнивать значение ячейки j,
            # со значением ячейки m.
            if data[j] < data[m]:
                # Если в j значение меньше, чем в m,
                # сохраним в m номер найденного
                # на данный момент минимума.
                m = j
            # Перейдем к следующей ячейке.
            j += 1
        # ОБМЕН ЗНАЧЕНИЙ
        # В ячейку i записывается найденный минимум,
        # а значение из ячейки i переносится
        # на старое место минимума.
        data[i], data[m] = data[m], data[i]
        # ПЕРЕХОД К СЛЕДУЮЩЕЙ НЕОБРАБОТАННОЙ ЯЧЕЙКЕ
        i += 1
    # Вывод отсортированного списка
    return data


array = [3, 5, 1, 8, 2, 9, 0, 4, 6]
print(slection_sort(array))
